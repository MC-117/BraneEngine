#pragma once
#ifndef _INPUT_H_
#define _INPUT_H_

#include "Object.h"
#include <dinput.h>
#define KEY_DOWN(VK_NONAME) ((GetAsyncKeyState(VK_NONAME) & 0x8000) ? 1:0)

enum MouseButtonEnum
{
	Left, Right, Middle
};

enum InputStateEnum
{
	Up, Down, OnPress, OnRelease
};

class Input : public Object
{
public:
	Delegate<void(Input*, MouseButtonEnum, InputStateEnum, int, int)> mouseInputHandler;
	Delegate<void(Input*, int, int)> mouseMoveHandler;
	Delegate<void(Input*, int, int, int)> mouseWheelInputHandler;
	Delegate<void(Input*, char, InputStateEnum)> keyboardInputHandler;

	Input(string name = "Input");
	virtual ~Input();

	virtual void begin();
	virtual void tick(float deltaTime);
	virtual void end();

	void setHWND(HWND hwnd);
	string getKeyName(char keyValue);
	InputStateEnum getKeyState(char key);
	bool getKeyUp(char key);
	bool getKeyDown(char key);
	bool getKeyPress(char key);
	bool getKeyRelease(char key);
	Unit2Di getMousePos();
	Unit2Di getCursorPos();
	Unit2Di getPreMousePos();
	Unit2Di getPreCursorPos();
	Unit2Di getMouseMove();
	Unit2Di getCursorMove();
	int getMouseWheelValue();
	InputStateEnum getMouseButtonState(MouseButtonEnum button);
	bool getMouseButtonUp(MouseButtonEnum button);
	bool getMouseButtonDown(MouseButtonEnum button);
	bool getMouseButtonPress(MouseButtonEnum button);
	bool getMouseButtonRelease(MouseButtonEnum button);
	bool getCursorHidden();
	void setCursorHidden(bool hidden);
	void resetHandlers();
	void setPause(bool v = true);
protected:
	HWND _hwnd = 0;
	bool pause = false;
	LPDIRECTINPUT8 _directInput;
	LPDIRECTINPUTDEVICE8 _mouseDevice;
	Unit2Di mousePos = { -1, -1 }, mousePosPrevious = { -1, -1 };
	Unit2Di cursorPos = { -1, -1 }, cursorPosPrevious = { -1, -1 };
	InputStateEnum mouseState[3] = { Up, Up, Up };
	int mouseWheelVal = 0, cursorVisibilityCount = 0;
	bool cursorHidden = false;
	InputStateEnum keyState[255];
	const const char* VKSet[255] = {
		"None",
		"Left_Mouse",
		"Right_Mouse",
		"Cancel",
		"Middle_Mouse",
		"Xbutton1",
		"Xbutton2",
		"Undefined",
		"Backspace",
		"Tab",
		"Undefined",
		"Undefined",
		"Clear",
		"Enter",
		"Undefined",
		"Undefined",
		"Shift",
		"Ctrl",
		"Alt",
		"Pause",
		"Caps_Lock",
		"Kana_Hanguel_Hangul",
		"Undefined",
		"Junja",
		"Final",
		"Hanja_Kanji",
		"Undefined",
		"Esc",
		"Convent",
		"NonConvent",
		"Accept",
		"Modechange",
		"Space",
		"Page_Up",
		"Page_Down",
		"End",
		"Home",
		"Left",
		"Up",
		"Right",
		"Down",
		"Select",
		"Print",
		"Execute",
		"Snapshot",
		"Insert",
		"Delete",
		"Help",
		"0",
		"1",
		"2",
		"3",
		"4",
		"5",
		"6",
		"7",
		"8",
		"9",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"A",
		"B",
		"C",
		"D",
		"E",
		"F",
		"G",
		"H",
		"I",
		"J",
		"K",
		"L",
		"M",
		"N",
		"O",
		"P",
		"Q",
		"R",
		"S",
		"T",
		"U",
		"V",
		"W",
		"X",
		"Y",
		"Z",
		"LWin",
		"RWin",
		"Apps",
		"Undefined",
		"Sleep",
		"SKB_0",
		"SKB_1",
		"SKB_2",
		"SKB_3",
		"SKB_4",
		"SKB_5",
		"SKB_6",
		"SKB_7",
		"SKB_8",
		"SKB_9",
		"SKB_*",
		"SKB_+",
		"SKB_Enter",
		"SKB_-",
		"SKB_.",
		"SKB_/",
		"F1",
		"F2",
		"F3",
		"F4",
		"F5",
		"F6",
		"F7",
		"F8",
		"F9",
		"F10",
		"F11",
		"F12",
		"F13",
		"F14",
		"F15",
		"F16",
		"F17",
		"F18",
		"F19",
		"F20",
		"F21",
		"F22",
		"F23",
		"F24",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Num_Lock",
		"Scroll",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"LShift",
		"RShift",
		"LCtrl",
		"RCtrl",
		"LMenu",
		"RMenu",
		"Browser_Back",
		"Browser_Forward",
		"Browser_Refresh",
		"Browser_Stop",
		"Browser_Search",
		"Browser_Favorites",
		"Browser_Home",
		"VolumeMute",
		"VolumeDown",
		"VolumeUp",
		"Media_Next",
		"Media_Prev",
		"Media_Stop",
		"Media_Play_Pause",
		"Launch_Mail",
		"Launch_Media_Select",
		"Launch_App1",
		"Launch_App2",
		"Undefined",
		"Undefined",
		";_:",
		"=_+",
		",_.",
		"-__",
		"._>",
		"/_?",
		"`_~",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"Undefined",
		"[_{",
		"\\_|",
		"]_}",
		"'_\"",
		"OEM_8",
		"Undefined",
		"OEM_S",
		"OEM_102",
		"OEM_S",
		"OEM_S",
		"Processkey",
		"OEM_S",
		"Packet",
		"Undefined",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"OEM_S",
		"Attn",
		"Crsel",
		"Exsel",
		"Ereof",
		"Play",
		"Zoom",
		"Noname",
		"Pa1",
		"OEM_Clear"
	};
	/*map<int, const char*> VKSet = {
		{ VK_LBUTTON, "Left Mouse" },
		{ VK_RBUTTON, "Right Mouse" },
		{ VK_CANCEL, "Cancel" },
		{ VK_MBUTTON, "Middle Mouse" },
		{ VK_XBUTTON1, "Xbutton1" },
		{ VK_XBUTTON2, "Xbutton2" },
		{ VK_BACK, "Backspace" },
		{ VK_TAB, "Tab" },
		{ VK_CLEAR, "Clear" },
		{ VK_RETURN, "Enter" },
		{ VK_SHIFT, "Shift" },
		{ VK_CONTROL, "Ctrl" },
		{ VK_MENU, "Alt" },
		{ VK_PAUSE, "Pause" },
		{ VK_CAPITAL, "Caps Lock" },
		{ VK_FINAL, "Final" },
		{ VK_ESCAPE, "Esc" },
		{ VK_CONVERT, "Convent" },
		{ VK_NONCONVERT, "NonConvent" },
		{ VK_ACCEPT, "Accept" },
		{ VK_MODECHANGE, "Modechange" },
		{ VK_SPACE, "Space" },
		{ VK_PRIOR, "Page Up" },
		{ VK_NEXT, "Page Down" },
		{ VK_END, "End" },
		{ VK_HOME, "Home" },
		{ VK_LEFT, "Left Arrow" },
		{ VK_UP, "Up Arrow" },
		{ VK_RIGHT, "Right Arrow" },
		{ VK_DOWN, "Down Arrow" },
		{ VK_SELECT, "Select" },
		{ VK_PRINT, "Print" },
		{ VK_EXECUTE, "Execute" },
		{ VK_SNAPSHOT, "Snapshot" },
		{ VK_INSERT, "Insert" },
		{ VK_DELETE, "Delete" },
		{ VK_HELP, "Help" },
		{ 48, "0" },
		{ 49, "1" },
		{ 50, "2" },
		{ 51, "3" },
		{ 52, "4" },
		{ 53, "5" },
		{ 54, "6" },
		{ 55, "7" },
		{ 56, "8" },
		{ 57, "9" },
		{ 65, "A" },
		{ 66, "B" },
		{ 67, "C" },
		{ 68, "D" },
		{ 69, "E" },
		{ 70, "F" },
		{ 71, "G" },
		{ 72, "H" },
		{ 73, "I" },
		{ 74, "J" },
		{ 75, "K" },
		{ 76, "L" },
		{ 77, "M" },
		{ 78, "N" },
		{ 79, "O" },
		{ 80, "P" },
		{ 81, "Q" },
		{ 82, "R" },
		{ 83, "S" },
		{ 84, "T" },
		{ 85, "U" },
		{ 86, "V" },
		{ 87, "W" },
		{ 88, "X" },
		{ 89, "Y" },
		{ 90, "Z" },
		{ VK_LWIN, "LWin" },
		{ VK_RWIN, "RWin" },
		{ VK_APPS, "Apps" },
		{ VK_SLEEP, "Sleep" },
		{ VK_NUMPAD0, "SKB_0" },
		{ VK_NUMPAD1, "SKB_1" },
		{ VK_NUMPAD2, "SKB_2" },
		{ VK_NUMPAD3, "SKB_3" },
		{ VK_NUMPAD4, "SKB_4" },
		{ VK_NUMPAD5, "SKB_5" },
		{ VK_NUMPAD6, "SKB_6" },
		{ VK_NUMPAD7, "SKB_7" },
		{ VK_NUMPAD8, "SKB_8" },
		{ VK_NUMPAD9, "SKB_9" },
		{ VK_MULTIPLY, "SKB_*" },
		{ VK_ADD, "SKB_+" },
		{ VK_SEPARATOR, "SKB_Enter" },
		{ VK_SUBTRACT, "SKB_-" },
		{ VK_DECIMAL, "SKB_." },
		{ VK_DIVIDE, "SKB_/" },
		{ VK_F1, "F1" },
		{ VK_F2, "F2" },
		{ VK_F3, "F3" },
		{ VK_F4, "F4" },
		{ VK_F5, "F5" },
		{ VK_F6, "F6" },
		{ VK_F7, "F7" },
		{ VK_F8, "F8" },
		{ VK_F9, "F9" },
		{ VK_F10, "F10" },
		{ VK_F11, "F11" },
		{ VK_F12, "F12" },
		{ VK_F13, "F13" },
		{ VK_F14, "F14" },
		{ VK_F15, "F15" },
		{ VK_F16, "F16" },
		{ VK_F17, "F17" },
		{ VK_F18, "F18" },
		{ VK_F19, "F19" },
		{ VK_F20, "F20" },
		{ VK_F21, "F21" },
		{ VK_F22, "F22" },
		{ VK_F23, "F23" },
		{ VK_F24, "F24" },
		{ VK_NUMLOCK, "Num Lock" },
		{ VK_SCROLL, "Scroll" },
		{ VK_LSHIFT, "LShift" },
		{ VK_RSHIFT, "RShift" },
		{ VK_LCONTROL, "LCtrl" },
		{ VK_RCONTROL, "RCtrl" },
		{ VK_LMENU, "LMenu" },
		{ VK_RMENU, "RMenu" },
		{ VK_BROWSER_BACK, "Browser Back" },
		{ VK_BROWSER_FORWARD, "Browser Forward" },
		{ VK_BROWSER_REFRESH, "Browser Refresh" },
		{ VK_BROWSER_STOP, "Browser Stop" },
		{ VK_BROWSER_SEARCH, "Browser Search" },
		{ VK_BROWSER_FAVORITES, "Browser Favorites" },
		{ VK_BROWSER_HOME, "Browser Home" },
		{ VK_VOLUME_MUTE, "VolumeMute" },
		{ VK_VOLUME_DOWN, "VolumeDown" },
		{ VK_VOLUME_UP, "VolumeUp" },
		{ VK_MEDIA_NEXT_TRACK, "Media Next" },
		{ VK_MEDIA_PREV_TRACK, "Media Prev" },
		{ VK_MEDIA_STOP, "Media Stop" },
		{ VK_MEDIA_PLAY_PAUSE, "Media Pause" },
		{ VK_LAUNCH_MAIL, "Launch Mail" },
		{ VK_LAUNCH_MEDIA_SELECT, "Launch Media Select" },
		{ VK_LAUNCH_APP1, "Launch App1" },
		{ VK_LAUNCH_APP2, "Launch App2" },
		{ VK_OEM_1, "; :" },
		{ VK_OEM_PLUS, "= +" },
		{ VK_OEM_COMMA, ", ." },
		{ VK_OEM_MINUS, "- _" },
		{ VK_OEM_PERIOD, ". >" },
		{ VK_OEM_2, "/ ?" },
		{ VK_OEM_3, "` ~" },
		{ VK_OEM_4, "[ {" },
		{ VK_OEM_5, "\\ |" },
		{ VK_OEM_6, "] }" },
		{ VK_OEM_7, "' \"" },
		{ VK_OEM_8, "OEM_8" },
		{ VK_OEM_102, "OEM_102" },
		{ VK_PACKET, "Packet" },
		{ VK_PROCESSKEY, "Processkey" },
		{ VK_ATTN, "Attn" },
		{ VK_CRSEL, "Crsel" },
		{ VK_EXSEL, "Exsel" },
		{ VK_EREOF, "Ereof" },
		{ VK_PLAY, "Play" },
		{ VK_ZOOM, "Zoom" },
		{ VK_NONAME, "Noname" },
		{ VK_PA1, "Pa1" },
		{ VK_OEM_CLEAR, "OEM_Clear" }
	};*/

	virtual void mouseInput(int button, int state, int x, int y);
	virtual void mouseMove(int x, int y);
	virtual void mouseWheelInput(int button, int dir, int x, int y);
	virtual void keyboardInput(char key, int state);

	bool readDevice(LPDIRECTINPUTDEVICE8 pDIDevice, void *pBuffer, long lSize);
	void hideCursor(bool hidden);
};

#endif // !_INPUT_H_
