#order 2500
#material
Texture colorMap: white
#vertex
#version 460 core
#include "lib/ParticleData_Def.hmat"
#include "lib/CameraData_Def.hmat"

out Particle particle;

void main()
{
    particle = Particles[gl_InstanceID + gl_BaseInstance];
    gl_Position = camData.pmat * vec4(particle.pos, 1.0);
    gl_PointSize = particle.scale.x;
}

#fragment
#version 410 core

struct Particle
{
    vec3 pos;
    float lifetime;
    vec3 scale;
    float maxLifetime;
    vec3 velocity;
    float type;
    vec3 acceleration;
    float extSca;
    vec4 extVec;
    vec4 color;
};

uniform sampler2D colorMap;
in Particle particle;
in vec2 UV;
layout (location = 0) out vec4 FragColor;

void main()
{
    FragColor = particle.color;// * texture(colorMap, UV);
}