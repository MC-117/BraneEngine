#order 5000
#material
Color baseColor: 34, 166, 242, 255
#vertex
#version 460 core
// #extension GL_ARB_shader_draw_parameters : require

// #extension GL_ARB_shader_storage_buffer_object : require
layout (std430, binding = 0) buffer CB0
{
    mat4 Transforms[];
};

layout (location = 0) in vec3 pos;
layout (location = 1) in vec2 uv;
layout (location = 2) in vec3 norm;
uniform mat4 pmat;
//out vec3 Normal;
//out vec3 WorldPos;

void main()
{
    //WorldPos = (Transforms[gl_InstanceID + gl_BaseInstance] * vec4(pos, 1.0)).xyz;
    gl_Position = pmat * Transforms[gl_InstanceID + gl_BaseInstance] * vec4(pos, 1.0);
    //Normal = normalize(mat3(Transforms[gl_InstanceID + gl_BaseInstance]) * norm);
}
#fragment
#version 410 core

// vec4 fresnelSchlick(float cosTheta, vec4 F0)
// {
//     return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);
// }

// uniform vec3 camPos;
uniform vec4 baseColor;
// in vec3 Normal;
// in vec3 WorldPos;
out vec4 FragColor;
void main()
{
    FragColor = baseColor;
    //FragColor = fresnelSchlick(dot(Normal, normalize(camPos - WorldPos)), baseColor);
}